name: Build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/cache_cargo
    - name: Cargo install
      run: |
        cargo install wasm-pack -f
        cargo install cargo-generate -f
    - name: Rust Build
      run: cargo build
    - name: Run Tests
      run: cargo test --verbose
    - name: Run Wasm Build
      run: wasm-pack build
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    - name: Restore cache pnpm-store
      id: node_modules_cache
      uses: actions/cache@v4
      with:
        save-always: true
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      working-directory: www
    - name: Run www build
      run: pnpm run build
      working-directory: www
